openapi: 3.0.3
info:
  title: Soil
  description: API description of `Soil` of the `Hypnos` project.
  license:
    name: GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.html
  version: 1.0.0
externalDocs:
  description: The `Hypnos` project
  url: https://sr.ht/~serra/hypnos/
paths:
  /libraries:
    get:
      description: Get the available libraries.
      tags:
        - Browse
      responses:
        200:
          description: todo
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/DirectoryEntry'
              examples:
                default:
                  summary: Example response
                  value: |
                    [
                      {
                        "id": "0",
                        "title": "Music",
                        "type": "dir"
                      },
                      {
                        "id": "1",
                        "title": "Audio Books",
                        "type": "dir"
                      }
                    ]
  /directory/{id}:
    get:
      description: Get the contents of the specified directory.
      tags:
        - Browse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        200:
          description: todo
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/DirectoryListing'
              examples:
                default:
                  summary: Example response
                  value: |
                    {
                      "parent": {
                        "id": "0",
                        "title": "Music",
                        "type": "dir"
                      },
                      "entries": [
                        {
                          "id": "2",
                          "title": "DirA",
                          "type": "dir"
                        },
                        {
                          "id": "3",
                          "title": "Song.mp3",
                          "type": "audioFile"
                        }
                      ]
                    }
        404:
          description: Not found
  /inlineTracks/{id}:
    get:
      description: |
        Duplicate of `/directory` because oneOf is
        not supported by `openapi-generator`.
      tags:
        - Browse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        200:
          description: todo
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/DirectoryListing'
        404:
          description: Not found
  /track/{id}:
    get:
      description: Gets the actual trackdata and optional metadata.
      tags:
        - Content
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        200:
          description: |
            Information and or the actual track. Depending on `Accept` header.
            When `multipart/form-data` is accepted two fields will be returned. `meta` containing
            the metadata as json and `track` containing the raw audio data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackMetaData'
            audio/ogg:
              example: <audioData>
            multipart/form-data:
              example: |
                --boundary
                Content-Disposition: form-data; name="meta"
                Content-Type: application/json

                <see TrackMetaData type>
                --boundary
                Content-Disposition: form-data; name="track"
                Content-Type: audio/ogg

                <audioData>
                --boundary--
        404:
          description: Not found
components:
  schemas:
    InlineTrackMetaData:
      type: object
      properties:
        albumTitle:
          type: string
        artistName:
          type: string
        tracks:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Id'
              title:
                type: string
              duration:
                type: number
                format: int32
                minimum: 0
            required:
              - id
              - title
              - duration
      required:
        - albumTitle
        - tracks
    TrackMetaData:
      type: object
      properties:
        duration:
          type: number
          format: int32
          minimum: 0
        title:
          type: string
        albumTitle:
          type: string
        artistName:
          type: string
      required:
        - duration
        - title
        - albumTitle
    DirectoryListing:
      type: object
      properties:
        entries:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/DirectoryEntry'
        parent:
          $ref: '#/components/schemas/DirectoryEntry'
      required:
        - entries
    DirectoryEntry:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        title:
          type: string
        type:
          $ref: '#/components/schemas/DirectoryEntryType'
      required:
        - id
        - title
        - type
    DirectoryEntryType:
      type: string
      enum:
        - dir
        - audioFile
        - inlineAudioFiles
        - inlineAudioFile
        - img
    Id:
      type: string
